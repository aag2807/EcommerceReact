[{"C:\\Users\\nanov\\Desktop\\ecommerce\\src\\index.js":"1","C:\\Users\\nanov\\Desktop\\ecommerce\\src\\App.js":"2","C:\\Users\\nanov\\Desktop\\ecommerce\\src\\reportWebVitals.js":"3","C:\\Users\\nanov\\Desktop\\ecommerce\\src\\components\\Product\\Product.jsx":"4","C:\\Users\\nanov\\Desktop\\ecommerce\\src\\components\\Products\\Products.jsx":"5","C:\\Users\\nanov\\Desktop\\ecommerce\\src\\components\\Product\\styles.js":"6","C:\\Users\\nanov\\Desktop\\ecommerce\\src\\components\\Navbar\\Navbar.jsx":"7","C:\\Users\\nanov\\Desktop\\ecommerce\\src\\components\\index.js":"8","C:\\Users\\nanov\\Desktop\\ecommerce\\src\\components\\Navbar\\Styles.js":"9","C:\\Users\\nanov\\Desktop\\ecommerce\\src\\lib\\commerce.js":"10","C:\\Users\\nanov\\Desktop\\ecommerce\\src\\components\\Products\\productStyles.js":"11","C:\\Users\\nanov\\Desktop\\ecommerce\\src\\components\\Cart\\styles.js":"12","C:\\Users\\nanov\\Desktop\\ecommerce\\src\\components\\Cart\\Cart.jsx":"13","C:\\Users\\nanov\\Desktop\\ecommerce\\src\\components\\Cart\\CartItem\\styles.js":"14","C:\\Users\\nanov\\Desktop\\ecommerce\\src\\components\\Cart\\CartItem\\CardItem.jsx":"15","C:\\Users\\nanov\\Desktop\\ecommerce\\src\\components\\CheckoutForm\\Checkout\\Checkout.jsx":"16","C:\\Users\\nanov\\Desktop\\ecommerce\\src\\components\\CheckoutForm\\PaymentForm\\PaymentForm.jsx":"17","C:\\Users\\nanov\\Desktop\\ecommerce\\src\\components\\CheckoutForm\\AddressForm\\AddressForm.jsx":"18","C:\\Users\\nanov\\Desktop\\ecommerce\\src\\components\\CheckoutForm\\CostumTextField.jsx":"19","C:\\Users\\nanov\\Desktop\\ecommerce\\src\\components\\CheckoutForm\\Checkout\\styles.js":"20","C:\\Users\\nanov\\Desktop\\ecommerce\\src\\components\\CheckoutForm\\PaymentForm\\Review.jsx":"21"},{"size":479,"mtime":1608574724711,"results":"22","hashOfConfig":"23"},{"size":2691,"mtime":1608763814465,"results":"24","hashOfConfig":"23"},{"size":362,"mtime":1608572069301,"results":"25","hashOfConfig":"23"},{"size":1277,"mtime":1608672674193,"results":"26","hashOfConfig":"23"},{"size":1404,"mtime":1608672657014,"results":"27","hashOfConfig":"23"},{"size":362,"mtime":1608592507505,"results":"28","hashOfConfig":"23"},{"size":1575,"mtime":1608682111911,"results":"29","hashOfConfig":"23"},{"size":277,"mtime":1608688843915,"results":"30","hashOfConfig":"23"},{"size":1633,"mtime":1608593263633,"results":"31","hashOfConfig":"23"},{"size":202,"mtime":1608600295195,"results":"32","hashOfConfig":"23"},{"size":298,"mtime":1608593227944,"results":"33","hashOfConfig":"23"},{"size":597,"mtime":1608673938880,"results":"34","hashOfConfig":"23"},{"size":2167,"mtime":1608686694737,"results":"35","hashOfConfig":"23"},{"size":349,"mtime":1608678601043,"results":"36","hashOfConfig":"23"},{"size":1533,"mtime":1608686114666,"results":"37","hashOfConfig":"23"},{"size":2520,"mtime":1608765602268,"results":"38","hashOfConfig":"23"},{"size":2799,"mtime":1608765305232,"results":"39","hashOfConfig":"23"},{"size":5501,"mtime":1608759035169,"results":"40","hashOfConfig":"23"},{"size":471,"mtime":1608755623991,"results":"41","hashOfConfig":"23"},{"size":1208,"mtime":1608688347969,"results":"42","hashOfConfig":"23"},{"size":1065,"mtime":1608761138197,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"1ntr4xx",{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\nanov\\Desktop\\ecommerce\\src\\index.js",[],["90","91"],"C:\\Users\\nanov\\Desktop\\ecommerce\\src\\App.js",[],"C:\\Users\\nanov\\Desktop\\ecommerce\\src\\reportWebVitals.js",[],"C:\\Users\\nanov\\Desktop\\ecommerce\\src\\components\\Product\\Product.jsx",[],"C:\\Users\\nanov\\Desktop\\ecommerce\\src\\components\\Products\\Products.jsx",[],"C:\\Users\\nanov\\Desktop\\ecommerce\\src\\components\\Product\\styles.js",[],"C:\\Users\\nanov\\Desktop\\ecommerce\\src\\components\\Navbar\\Navbar.jsx",["92","93"],"C:\\Users\\nanov\\Desktop\\ecommerce\\src\\components\\index.js",[],"C:\\Users\\nanov\\Desktop\\ecommerce\\src\\components\\Navbar\\Styles.js",[],"C:\\Users\\nanov\\Desktop\\ecommerce\\src\\lib\\commerce.js",[],["94","95"],"C:\\Users\\nanov\\Desktop\\ecommerce\\src\\components\\Products\\productStyles.js",[],"C:\\Users\\nanov\\Desktop\\ecommerce\\src\\components\\Cart\\styles.js",[],"C:\\Users\\nanov\\Desktop\\ecommerce\\src\\components\\Cart\\Cart.jsx",[],"C:\\Users\\nanov\\Desktop\\ecommerce\\src\\components\\Cart\\CartItem\\styles.js",[],"C:\\Users\\nanov\\Desktop\\ecommerce\\src\\components\\Cart\\CartItem\\CardItem.jsx",[],"C:\\Users\\nanov\\Desktop\\ecommerce\\src\\components\\CheckoutForm\\Checkout\\Checkout.jsx",["96","97","98","99"],"import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  CssBaseline,\r\n  Paper,\r\n  Stepper,\r\n  Step,\r\n  StepLabel,\r\n  Typography,\r\n  CircularProgress,\r\n  Divider,\r\n  Button,\r\n} from \"@material-ui/core\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { commerce } from \"../../../lib/commerce\";\r\nimport useStyles from \"./styles\";\r\nimport AddressForm from \"../AddressForm/AddressForm\";\r\nimport PaymentForm from \"../PaymentForm/PaymentForm\";\r\n\r\nconst steps = [\"Shipping address\", \"Payment details\"];\r\n\r\nconst Checkout = ({ cart, order, onCaptureCheckout, error }) => {\r\n  const [activeStep, setActiveStep] = useState(0);\r\n  const [checkoutToken, setCheckoutToken] = useState(null);\r\n  const [shippingData, setShippingData] = useState({});\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    const generateToken = async () => {\r\n      try {\r\n        const token = await commerce.checkout.generateToken(cart.id, {\r\n          type: \"cart\",\r\n        });\r\n        setCheckoutToken(token);\r\n      } catch (E) {\r\n        console.error(E);\r\n        history.pushState(\"/\");\r\n      }\r\n    };\r\n\r\n    generateToken();\r\n  }, [cart]);\r\n\r\n  const nextStep = () => setActiveStep((state) => state + 1);\r\n  const prevStep = () => setActiveStep((state) => state - 1);\r\n\r\n  const next = (data) => {\r\n    setShippingData(data);\r\n    nextStep();\r\n  };\r\n\r\n  const Form = () =>\r\n    activeStep === 0 ? (\r\n      <AddressForm checkoutToken={checkoutToken} next={next} />\r\n    ) : (\r\n      <PaymentForm\r\n        next={nextStep}\r\n        onCaptureCheckout={onCaptureCheckout}\r\n        prevStep={prevStep}\r\n        checkoutToken={checkoutToken}\r\n        shippingData={shippingData}\r\n      />\r\n    );\r\n\r\n  const Confirmation = () => <div>Confirmation</div>;\r\n\r\n  return (\r\n    <>\r\n      <CssBaseline />\r\n      <div className={classes.toolbar} />\r\n      <main className={classes.layout}>\r\n        <Paper className={classes.paper}>\r\n          <Typography variant=\"h4\" align=\"center\">\r\n            Checkout\r\n          </Typography>\r\n          <Stepper activeStep={0} className={classes.stepper}>\r\n            {steps.map((step) => (\r\n              <Step key={step}>\r\n                <StepLabel>{step}</StepLabel>\r\n              </Step>\r\n            ))}\r\n          </Stepper>\r\n          {activeStep === steps.length ? (\r\n            <Confirmation />\r\n          ) : (\r\n            checkoutToken && <Form />\r\n          )}\r\n        </Paper>\r\n      </main>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Checkout;\r\n","C:\\Users\\nanov\\Desktop\\ecommerce\\src\\components\\CheckoutForm\\PaymentForm\\PaymentForm.jsx",[],"C:\\Users\\nanov\\Desktop\\ecommerce\\src\\components\\CheckoutForm\\AddressForm\\AddressForm.jsx",["100","101"],"import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  InputLabel,\r\n  Select,\r\n  MenuItem,\r\n  Button,\r\n  Grid,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { useForm, FormProvider } from \"react-hook-form\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { commerce } from \"../../../lib/commerce\";\r\n\r\nimport FormInput from \"../CostumTextField\";\r\n\r\nconst AddressForm = ({ checkoutToken, next }) => {\r\n  const methods = useForm();\r\n\r\n  const [shippingCountries, setShippingCountries] = useState([]);\r\n  const [shippingCountry, setShippingCountry] = useState(\"\");\r\n  const [shippingSubdivisions, setShippingSubdivisions] = useState([]);\r\n  const [shippingSubdivision, setShippingSubdivision] = useState(\"\");\r\n  const [shippingOptions, setShippingOptions] = useState([]);\r\n  const [shippingOption, setShippingOption] = useState(\"\");\r\n\r\n  const fetchShippingCountries = async (checkoutTokenId) => {\r\n    try {\r\n      const { countries } = await commerce.services.localeListShippingCountries(\r\n        checkoutTokenId\r\n      );\r\n\r\n      setShippingCountries(countries);\r\n      setShippingCountry(Object.keys(countries)[0]);\r\n    } catch (E) {\r\n      console.error(E);\r\n    }\r\n  };\r\n\r\n  const fetchSubdivision = async (countryCode) => {\r\n    try {\r\n      const { subdivisions } = await commerce.services.localeListSubdivisions(\r\n        countryCode\r\n      );\r\n\r\n      setShippingSubdivisions(subdivisions);\r\n      setShippingSubdivision(Object.keys(subdivisions)[0]);\r\n    } catch (E) {\r\n      console.error(E);\r\n    }\r\n  };\r\n\r\n  const fetchShippingOptions = async (\r\n    checkoutTokenId,\r\n    country,\r\n    stateProvince = null\r\n  ) => {\r\n    const options = await commerce.checkout.getShippingOptions(\r\n      checkoutTokenId,\r\n      { country, region: stateProvince }\r\n    );\r\n\r\n    setShippingOptions(options);\r\n    setShippingOption(options[0].id);\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchShippingCountries(checkoutToken.id);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (shippingCountry) fetchSubdivision(shippingCountry);\r\n  }, [shippingCountry]);\r\n\r\n  useEffect(() => {\r\n    if (shippingSubdivision)\r\n      fetchShippingOptions(\r\n        checkoutToken.id,\r\n        shippingCountry,\r\n        shippingSubdivision\r\n      );\r\n  }, [shippingSubdivision]);\r\n\r\n  const options = shippingOptions.map((sO) => ({\r\n    id: sO.id,\r\n    label: `${sO.description} - (${sO.price.formatted_with_symbol})`,\r\n  }));\r\n\r\n  const subdivisions = Object.entries(shippingSubdivisions).map(\r\n    ([code, name]) => ({\r\n      id: code,\r\n      label: name,\r\n    })\r\n  );\r\n\r\n  const countries = Object.entries(shippingCountries).map(([code, name]) => ({\r\n    id: code,\r\n    label: name,\r\n  }));\r\n\r\n  return (\r\n    <>\r\n      <Typography gutterBottom variant=\"h6\">\r\n        Shipping Address\r\n      </Typography>\r\n      <FormProvider {...methods}>\r\n        <form\r\n          onSubmit={(data) =>\r\n            next({\r\n              ...data,\r\n              shippingCountry,\r\n              shippingSubdivision,\r\n              shippingOption,\r\n            })\r\n          }\r\n        >\r\n          <Grid container spacing={3}>\r\n            <FormInput name=\"firstName\" label=\"First Name\" />\r\n            <FormInput name=\"lastName\" label=\"Last Name\" />\r\n            <FormInput name=\"address1\" label=\"Address\" />\r\n            <FormInput name=\"email\" label=\"Email\" />\r\n            <FormInput name=\"city\" label=\"City\" />\r\n            <FormInput name=\"ZIP\" label=\"ZipCode\" />\r\n\r\n            <Grid item xs={12} sm={6}>\r\n              <InputLabel>Shipping Country</InputLabel>\r\n              <Select\r\n                value={shippingCountry}\r\n                fullWidth\r\n                onChange={(e) => setShippingCountry(e.target.value)}\r\n              >\r\n                {countries.map((country) => (\r\n                  <MenuItem key={country.id} value={country.id}>\r\n                    {country.label}\r\n                  </MenuItem>\r\n                ))}\r\n              </Select>\r\n            </Grid>\r\n\r\n            <Grid item xs={12} sm={6}>\r\n              <InputLabel>Shipping Subdivision</InputLabel>\r\n              <Select\r\n                value={shippingSubdivision}\r\n                fullWidth\r\n                onChange={(e) => setShippingSubdivision(e.target.value)}\r\n              >\r\n                {subdivisions.map((subdivision) => (\r\n                  <MenuItem key={subdivision.id} value={subdivision.id}>\r\n                    {subdivision.label}\r\n                  </MenuItem>\r\n                ))}\r\n              </Select>\r\n            </Grid>\r\n\r\n            <Grid item xs={12} sm={6}>\r\n              <InputLabel>Shipping Options</InputLabel>\r\n              <Select\r\n                value={shippingOption}\r\n                fullWidth\r\n                onChange={(e) => setShippingOption(e.target.value)}\r\n              >\r\n                {options.map((option) => (\r\n                  <MenuItem key={option.id} value={option.id}>\r\n                    {option.label}\r\n                  </MenuItem>\r\n                ))}\r\n              </Select>\r\n            </Grid>\r\n          </Grid>\r\n          <br />\r\n          <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n            <Button component={Link} to=\"/cart\" variant=\"outlined\">\r\n              Back to Cart\r\n            </Button>\r\n            <Button type=\"submit\" variant=\"contained\" color=\"primary\">\r\n              Next\r\n            </Button>\r\n          </div>\r\n        </form>\r\n      </FormProvider>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AddressForm;\r\n","C:\\Users\\nanov\\Desktop\\ecommerce\\src\\components\\CheckoutForm\\CostumTextField.jsx",[],"C:\\Users\\nanov\\Desktop\\ecommerce\\src\\components\\CheckoutForm\\Checkout\\styles.js",[],"C:\\Users\\nanov\\Desktop\\ecommerce\\src\\components\\CheckoutForm\\PaymentForm\\Review.jsx",[],{"ruleId":"102","replacedBy":"103"},{"ruleId":"104","replacedBy":"105"},{"ruleId":"106","severity":1,"message":"107","line":8,"column":3,"nodeType":"108","messageId":"109","endLine":8,"endColumn":11},{"ruleId":"106","severity":1,"message":"110","line":9,"column":3,"nodeType":"108","messageId":"109","endLine":9,"endColumn":7},{"ruleId":"102","replacedBy":"111"},{"ruleId":"104","replacedBy":"112"},{"ruleId":"106","severity":1,"message":"113","line":9,"column":3,"nodeType":"108","messageId":"109","endLine":9,"endColumn":19},{"ruleId":"106","severity":1,"message":"114","line":10,"column":3,"nodeType":"108","messageId":"109","endLine":10,"endColumn":10},{"ruleId":"106","severity":1,"message":"115","line":11,"column":3,"nodeType":"108","messageId":"109","endLine":11,"endColumn":9},{"ruleId":"116","severity":1,"message":"117","line":42,"column":6,"nodeType":"118","endLine":42,"endColumn":12,"suggestions":"119"},{"ruleId":"116","severity":1,"message":"120","line":69,"column":6,"nodeType":"118","endLine":69,"endColumn":8,"suggestions":"121"},{"ruleId":"116","severity":1,"message":"122","line":82,"column":6,"nodeType":"118","endLine":82,"endColumn":27,"suggestions":"123"},"no-native-reassign",["124"],"no-negated-in-lhs",["125"],"no-unused-vars","'MenuItem' is defined but never used.","Identifier","unusedVar","'Menu' is defined but never used.",["124"],["125"],"'CircularProgress' is defined but never used.","'Divider' is defined but never used.","'Button' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["126"],"React Hook useEffect has a missing dependency: 'checkoutToken.id'. Either include it or remove the dependency array.",["127"],"React Hook useEffect has missing dependencies: 'checkoutToken.id' and 'shippingCountry'. Either include them or remove the dependency array.",["128"],"no-global-assign","no-unsafe-negation",{"desc":"129","fix":"130"},{"desc":"131","fix":"132"},{"desc":"133","fix":"134"},"Update the dependencies array to be: [cart, history]",{"range":"135","text":"136"},"Update the dependencies array to be: [checkoutToken.id]",{"range":"137","text":"138"},"Update the dependencies array to be: [checkoutToken.id, shippingCountry, shippingSubdivision]",{"range":"139","text":"140"},[1166,1172],"[cart, history]",[1948,1950],"[checkoutToken.id]",[2243,2264],"[checkoutToken.id, shippingCountry, shippingSubdivision]"]